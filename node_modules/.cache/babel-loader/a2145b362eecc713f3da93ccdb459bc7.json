{"ast":null,"code":"import _slicedToArray from\"C:/Users/KIIT/chat-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";var _this=this;import{useState}from'react';import{SendOutlined,PictureOutlined}from'@ant-design/icons';import{sendMessage,isTyping}from'react-chat-engine';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var MessageForm=function MessageForm(props){var _useState=useState(''),_useState2=_slicedToArray(_useState,2),value=_useState2[0],setValue=_useState2[1];var chatId=props.chatId,creds=props.creds;var handleChange=function handleChange(event){setValue(event.target.value);isTyping(props,chatId);};var handleSubmit=function handleSubmit(event){event.preventDefault();var text=value.trim();if(text.length>0){sendMessage(creds,chatId,{text:text});}setValue('');};var handleUpload=function handleUpload(event){sendMessage(creds,chatId,{files:event.target.files,text:''});};return/*#__PURE__*/_jsxs(\"form\",{className:\"message-form\",onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"input\",{className:\"message-input\",placeholder:\"Send a message...\",value:value,onChange:handleChange,onSubmit:handleSubmit}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"upload-button\",children:/*#__PURE__*/_jsx(\"span\",{className:\"image-button\",children:/*#__PURE__*/_jsx(PictureOutlined,{className:\"picture-icon\"})})}),/*#__PURE__*/_jsx(\"input\",{type:\"file\",multiple:false,id:\"upload-button\",style:{display:'none'},onChange:handleUpload.bind(_this)}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"send-button\",children:/*#__PURE__*/_jsx(SendOutlined,{className:\"send-icon\"})})]});};export default MessageForm;","map":{"version":3,"sources":["C:/Users/KIIT/chat-app/src/Components/MessageForm.jsx"],"names":["useState","SendOutlined","PictureOutlined","sendMessage","isTyping","MessageForm","props","value","setValue","chatId","creds","handleChange","event","target","handleSubmit","preventDefault","text","trim","length","handleUpload","files","display","bind"],"mappings":"4JAAA,OAASA,QAAT,KAAyB,OAAzB,CACA,OAASC,YAAT,CAAuBC,eAAvB,KAA8C,mBAA9C,CACA,OAASC,WAAT,CAAsBC,QAAtB,KAAsC,mBAAtC,C,wFAEA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,KAAD,CAAW,CAC7B,cAA0BN,QAAQ,CAAC,EAAD,CAAlC,wCAAOO,KAAP,eAAcC,QAAd,eACA,GAAQC,CAAAA,MAAR,CAA0BH,KAA1B,CAAQG,MAAR,CAAgBC,KAAhB,CAA0BJ,KAA1B,CAAgBI,KAAhB,CAEA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,KAAD,CAAW,CAC9BJ,QAAQ,CAACI,KAAK,CAACC,MAAN,CAAaN,KAAd,CAAR,CAEAH,QAAQ,CAACE,KAAD,CAAQG,MAAR,CAAR,CACD,CAJD,CAMA,GAAMK,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACF,KAAD,CAAW,CAC9BA,KAAK,CAACG,cAAN,GAEA,GAAMC,CAAAA,IAAI,CAAGT,KAAK,CAACU,IAAN,EAAb,CAEA,GAAID,IAAI,CAACE,MAAL,CAAc,CAAlB,CAAqB,CACnBf,WAAW,CAACO,KAAD,CAAQD,MAAR,CAAgB,CAAEO,IAAI,CAAJA,IAAF,CAAhB,CAAX,CACD,CAEDR,QAAQ,CAAC,EAAD,CAAR,CACD,CAVD,CAYA,GAAMW,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACP,KAAD,CAAW,CAC9BT,WAAW,CAACO,KAAD,CAAQD,MAAR,CAAgB,CAAEW,KAAK,CAAER,KAAK,CAACC,MAAN,CAAaO,KAAtB,CAA6BJ,IAAI,CAAE,EAAnC,CAAhB,CAAX,CACD,CAFD,CAIA,mBACE,cAAM,SAAS,CAAC,cAAhB,CAA+B,QAAQ,CAAEF,YAAzC,wBACE,cACE,SAAS,CAAC,eADZ,CAEE,WAAW,CAAC,mBAFd,CAGE,KAAK,CAAEP,KAHT,CAIE,QAAQ,CAAEI,YAJZ,CAKE,QAAQ,CAAEG,YALZ,EADF,cAQE,cAAO,OAAO,CAAC,eAAf,uBACE,aAAM,SAAS,CAAC,cAAhB,uBACE,KAAC,eAAD,EAAiB,SAAS,CAAC,cAA3B,EADF,EADF,EARF,cAaE,cACE,IAAI,CAAC,MADP,CAEE,QAAQ,CAAE,KAFZ,CAGE,EAAE,CAAC,eAHL,CAIE,KAAK,CAAE,CAAEO,OAAO,CAAE,MAAX,CAJT,CAKE,QAAQ,CAAEF,YAAY,CAACG,IAAb,CAAkB,KAAlB,CALZ,EAbF,cAoBE,eAAQ,IAAI,CAAC,QAAb,CAAsB,SAAS,CAAC,aAAhC,uBACE,KAAC,YAAD,EAAc,SAAS,CAAC,WAAxB,EADF,EApBF,GADF,CA0BD,CApDD,CAsDA,cAAejB,CAAAA,WAAf","sourcesContent":["import { useState } from 'react';\r\nimport { SendOutlined, PictureOutlined } from '@ant-design/icons';\r\nimport { sendMessage, isTyping } from 'react-chat-engine';\r\n\r\nconst MessageForm = (props) => {\r\n  const [value, setValue] = useState('');\r\n  const { chatId, creds } = props;\r\n\r\n  const handleChange = (event) => {\r\n    setValue(event.target.value);\r\n\r\n    isTyping(props, chatId);\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    const text = value.trim();\r\n\r\n    if (text.length > 0) {\r\n      sendMessage(creds, chatId, { text });\r\n    }\r\n\r\n    setValue('');\r\n  };\r\n\r\n  const handleUpload = (event) => {\r\n    sendMessage(creds, chatId, { files: event.target.files, text: '' });\r\n  };\r\n\r\n  return (\r\n    <form className=\"message-form\" onSubmit={handleSubmit}>\r\n      <input\r\n        className=\"message-input\"\r\n        placeholder=\"Send a message...\"\r\n        value={value}\r\n        onChange={handleChange}\r\n        onSubmit={handleSubmit}\r\n      />\r\n      <label htmlFor=\"upload-button\">\r\n        <span className=\"image-button\">\r\n          <PictureOutlined className=\"picture-icon\" />\r\n        </span>\r\n      </label>\r\n      <input\r\n        type=\"file\"\r\n        multiple={false}\r\n        id=\"upload-button\"\r\n        style={{ display: 'none' }}\r\n        onChange={handleUpload.bind(this)}\r\n      />\r\n      <button type=\"submit\" className=\"send-button\">\r\n        <SendOutlined className=\"send-icon\" />\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default MessageForm;"]},"metadata":{},"sourceType":"module"}