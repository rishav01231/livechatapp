{"ast":null,"code":"import _objectSpread from\"C:/Users/KIIT/chat-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import MyMessage from'./MyMessage';import TheirMessage from'./TheirMessage';import MessageForm from'./MessageForm';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ChatFeed=function ChatFeed(props){var chats=props.chats,activeChat=props.activeChat,userName=props.userName,messages=props.messages;var chat=chats&&chats[activeChat];var renderReadReceipts=function renderReadReceipts(message,isMyMessage){return chat.people.map(function(person,index){return person.last_read===message.id&&/*#__PURE__*/_jsx(\"div\",{className:\"read-receipt\",style:{float:isMyMessage?'right':'left',backgroundImage:person.person.avatar&&\"url(\".concat(person.person.avatar,\")\")}},\"read_\".concat(index));});};var renderMessages=function renderMessages(){var keys=Object.keys(messages);return keys.map(function(key,index){var message=messages[key];var lastMessageKey=index===0?null:keys[index-1];var isMyMessage=userName===message.sender.username;return/*#__PURE__*/_jsxs(\"div\",{style:{width:'100%'},children:[/*#__PURE__*/_jsx(\"div\",{className:\"message-block\",children:isMyMessage?/*#__PURE__*/_jsx(MyMessage,{message:message}):/*#__PURE__*/_jsx(TheirMessage,{message:message,lastMessage:messages[lastMessageKey]})}),/*#__PURE__*/_jsx(\"div\",{className:\"read-receipts\",style:{marginRight:isMyMessage?'18px':'0px',marginLeft:isMyMessage?'0px':'68px'},children:renderReadReceipts(message,isMyMessage)})]},\"msg_\".concat(index));});};if(!chat)return/*#__PURE__*/_jsx(\"div\",{});return/*#__PURE__*/_jsxs(\"div\",{className:\"chat-feed\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"chat-title-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"chat-title\",children:chat===null||chat===void 0?void 0:chat.title}),/*#__PURE__*/_jsx(\"div\",{className:\"chat-subtitle\",children:chat.people.map(function(person){return\" \".concat(person.person.username);})})]}),renderMessages(),/*#__PURE__*/_jsx(\"div\",{style:{height:'100px'}}),/*#__PURE__*/_jsx(\"div\",{className:\"message-form-container\",children:/*#__PURE__*/_jsx(MessageForm,_objectSpread(_objectSpread({},props),{},{chatId:activeChat}))})]});};export default ChatFeed;","map":{"version":3,"sources":["C:/Users/KIIT/chat-app/src/Components/ChatFeed.jsx"],"names":["MyMessage","TheirMessage","MessageForm","ChatFeed","props","chats","activeChat","userName","messages","chat","renderReadReceipts","message","isMyMessage","people","map","person","index","last_read","id","float","backgroundImage","avatar","renderMessages","keys","Object","key","lastMessageKey","sender","username","width","marginRight","marginLeft","title","height"],"mappings":"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","sourcesContent":["import MyMessage from './MyMessage';\r\nimport TheirMessage from './TheirMessage';\r\nimport MessageForm from './MessageForm';\r\n\r\nconst ChatFeed = (props) => {\r\n  const { chats, activeChat, userName, messages } = props;\r\n\r\n  const chat = chats && chats[activeChat];\r\n\r\n  const renderReadReceipts = (message, isMyMessage) => chat.people.map((person, index) => person.last_read === message.id && (\r\n    <div\r\n      key={`read_${index}`}\r\n      className=\"read-receipt\"\r\n      style={{\r\n        float: isMyMessage ? 'right' : 'left',\r\n        backgroundImage: person.person.avatar && `url(${person.person.avatar})`,\r\n      }}\r\n    />\r\n  ));\r\n\r\n  const renderMessages = () => {\r\n    const keys = Object.keys(messages);\r\n\r\n    return keys.map((key, index) => {\r\n      const message = messages[key];\r\n      const lastMessageKey = index === 0 ? null : keys[index - 1];\r\n      const isMyMessage = userName === message.sender.username;\r\n\r\n      return (\r\n        <div key={`msg_${index}`} style={{ width: '100%' }}>\r\n          <div className=\"message-block\">\r\n            {isMyMessage\r\n              ? <MyMessage message={message} />\r\n              : <TheirMessage message={message} lastMessage={messages[lastMessageKey]} />}\r\n          </div>\r\n          <div className=\"read-receipts\" style={{ marginRight: isMyMessage ? '18px' : '0px', marginLeft: isMyMessage ? '0px' : '68px' }}>\r\n            {renderReadReceipts(message, isMyMessage)}\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n  };\r\n\r\n  if (!chat) return <div />;\r\n\r\n  return (\r\n    <div className=\"chat-feed\">\r\n      <div className=\"chat-title-container\">\r\n        <div className=\"chat-title\">{chat?.title}</div>\r\n        <div className=\"chat-subtitle\">\r\n          {chat.people.map((person) => ` ${person.person.username}`)}\r\n        </div>\r\n      </div>\r\n      {renderMessages()}\r\n      <div style={{ height: '100px' }} />\r\n      <div className=\"message-form-container\">\r\n        <MessageForm {...props} chatId={activeChat} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatFeed;"]},"metadata":{},"sourceType":"module"}